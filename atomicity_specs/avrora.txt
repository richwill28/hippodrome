avrora/Main.main([Ljava/lang/String;)V
avrora/sim/SimulatorThread.run()V
avrora/sim/Simulator.start()V
avrora/actions/Action.run()V
avrora/actions/SimAction.run([Ljava/lang/String;)V
avrora/sim/Simulation.join()V
avrora/sim/clock/Synchronizer.join()V
avrora/sim/clock/RippleSynchronizer.join()V
avrora/arch/legacy/LegacyInterpreter.fastLoop()V
avrora/arch/legacy/LegacyInterpreter.runLoop()V
avrora/arch/legacy/LegacyInterpreter.sleepLoop()V
avrora/sim/AtmelInterpreter.advanceClock(J)V
avrora/sim/AtmelInterpreter.commit()V
avrora/sim/AtmelInterpreter.start()V
avrora/sim/clock/DeltaQueue.advance(J)V
avrora/sim/clock/DeltaQueue.advanceSlow(J)V
avrora/sim/clock/DeltaQueue$Link.fire()V
avrora/sim/clock/DeltaQueue.skipAhead()V
avrora/sim/clock/MainClock.advance(J)V
avrora/sim/clock/MainClock.skipAhead()V
avrora/sim/clock/RippleSynchronizer.access$000(Lavrora/sim/clock/RippleSynchronizer;JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;
avrora/sim/clock/RippleSynchronizer.advance(JLavrora/sim/clock/RippleSynchronizer$WaitLink;)Lavrora/sim/clock/RippleSynchronizer$WaitLink;
avrora/sim/clock/RippleSynchronizer$NotifyEvent.fire()V
avrora/sim/clock/RippleSynchronizer.removeNode(Lavrora/sim/Simulation$Node;)V
avrora/sim/clock/RippleSynchronizer.waitFor(JLavrora/sim/clock/RippleSynchronizer$WaitLink;)V
avrora/sim/clock/RippleSynchronizer.waitForLink(Lavrora/sim/clock/RippleSynchronizer$WaitLink;)V
avrora/sim/clock/RippleSynchronizer.waitForNeighbors(J)V
avrora/sim/radio/Medium$Receiver.access$000(Lavrora/sim/radio/Medium$Receiver;J)V
avrora/sim/radio/Medium$Receiver$Ticker.deliverByte(J)V
avrora/sim/radio/Medium$Receiver$Ticker.fireLocked(J)V
avrora/sim/radio/Medium$Receiver$Ticker.fireUnlocked(J)V
avrora/sim/radio/Medium$Receiver$Ticker.fire()V
avrora/sim/radio/Medium$Receiver.waitForNeighbors(J)V
