Engine: compute_aux_graph (50 -> [0])
V = T0
RV =
FT(0, begin, ) = T0
FT(0, undefined, ) = T0
LT(0, begin, ) = T0
LT(0, undefined, ) = T0
E =
C(T0) = (0, begin, , down)

Engine: compute_aux_graph (51 -> [1])
V = T1
RV = T1
FT(0, write, @03.Table.forks_\[Z) = T1
FT(0, undefined, ) = T1
LT(0, write, @03.Table.forks_\[Z) = T1
LT(0, undefined, ) = T1
E =
C(T1) = (0, write, @03.Table.forks_\[Z, open)

Engine: compute_aux_graph (52 -> [2])
V = T2
RV = T2
FT(0, read, @03.Table.forks_\[Z) = T2
FT(0, undefined, ) = T2
LT(0, read, @03.Table.forks_\[Z) = T2
LT(0, undefined, ) = T2
E =
C(T2) = (0, read, @03.Table.forks_\[Z, open)

Engine: compute_aux_graph (53 -> [3])
V = T3
RV = T3
FT(0, write, @04[0]) = T3
FT(0, undefined, ) = T3
LT(0, write, @04[0]) = T3
LT(0, undefined, ) = T3
E =
C(T3) = (0, write, @04[0], open)

Engine: compute_aux_graph (54 -> [4])
V = T4
RV = T4
FT(0, write, @04[1]) = T4
FT(0, undefined, ) = T4
LT(0, write, @04[1]) = T4
LT(0, undefined, ) = T4
E =
C(T4) = (0, write, @04[1], open)

Engine: compute_aux_graph (55 -> [5])
V = T5
RV = T5
FT(0, write, @04[2]) = T5
FT(0, undefined, ) = T5
LT(0, write, @04[2]) = T5
LT(0, undefined, ) = T5
E =
C(T5) = (0, write, @04[2], open)

Engine: compute_aux_graph (56 -> [6])
V = T6
RV = T6
FT(0, write, @04[3]) = T6
FT(0, undefined, ) = T6
LT(0, write, @04[3]) = T6
LT(0, undefined, ) = T6
E =
C(T6) = (0, write, @04[3], open)

Engine: compute_aux_graph (57 -> [7])
V = T7
RV = T7
FT(0, write, @04[4]) = T7
FT(0, undefined, ) = T7
LT(0, write, @04[4]) = T7
LT(0, undefined, ) = T7
E =
C(T7) = (0, write, @04[4], open)

Engine: compute_aux_graph (58 -> [8])
V = T8
RV = T8
FT(0, write, @05.Philo.id_I) = T8
FT(0, undefined, ) = T8
LT(0, write, @05.Philo.id_I) = T8
LT(0, undefined, ) = T8
E =
C(T8) = (0, write, @05.Philo.id_I, open)

Engine: compute_aux_graph (59 -> [9])
V = T9
RV = T9
FT(0, write, @05.Philo.t_LTable;) = T9
FT(0, undefined, ) = T9
LT(0, write, @05.Philo.t_LTable;) = T9
LT(0, undefined, ) = T9
E =
C(T9) = (0, write, @05.Philo.t_LTable;, open)

Engine: compute_aux_graph (60 -> [10])
V = T10
RV = T10
FT(0, fork, 1) = T10
FT(0, undefined, ) = T10
LT(0, fork, 1) = T10
LT(0, undefined, ) = T10
E =
C(T10) = (0, fork, 1, open)

Engine: compute_aux_graph (61 -> [11])
V = T11
RV =
FT(1, begin, ) = T11
FT(1, undefined, ) = T11
LT(1, begin, ) = T11
LT(1, undefined, ) = T11
E =
C(T11) = (1, begin, , down)

Engine: compute_aux_graph (62 -> [12])
V = T12
RV = T12
FT(0, write, @07.Philo.id_I) = T12
FT(0, undefined, ) = T12
LT(0, write, @07.Philo.id_I) = T12
LT(0, undefined, ) = T12
E =
C(T12) = (0, write, @07.Philo.id_I, open)

Engine: compute_aux_graph (63 -> [13])
V = T13
RV = T13
FT(1, read, @05.Philo.id_I) = T13
FT(1, undefined, ) = T13
LT(1, read, @05.Philo.id_I) = T13
LT(1, undefined, ) = T13
E =
C(T13) = (1, read, @05.Philo.id_I, open)

Engine: compute_aux_graph (64 -> [14])
V = T14
RV = T14
FT(0, write, @07.Philo.t_LTable;) = T14
FT(0, undefined, ) = T14
LT(0, write, @07.Philo.t_LTable;) = T14
LT(0, undefined, ) = T14
E =
C(T14) = (0, write, @07.Philo.t_LTable;, open)

Engine: compute_aux_graph (134 -> [15])
V = T15
RV = T15
FT(1, read, @05.Philo.t_LTable;) = T15
FT(1, undefined, ) = T15
LT(1, read, @05.Philo.t_LTable;) = T15
LT(1, undefined, ) = T15
E =
C(T15) = (1, read, @05.Philo.t_LTable;, open)

Engine: compute_aux_graph (22 -> 134 63)
Before merge_routine
V =
RV =
E =

After merge_routine
V =
RV =
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Before compute_vertices
V =
RV =
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

After compute_vertices
V = T17
RV =
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Before compute_reversed_vertices
V = T17
RV =
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

After compute_reversed_vertices
V = T17
RV = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Before compute_first_transactions
V = T17
RV = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

After compute_first_transactions
V = T17
RV = T17
FT(1, read, @05.Philo.t_LTable;) = T17
FT(1, undefined, ) = T17
FT(1, read, @05.Philo.id_I) = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Before compute_last_transactions
V = T17
RV = T17
FT(1, read, @05.Philo.t_LTable;) = T17
FT(1, undefined, ) = T17
FT(1, read, @05.Philo.id_I) = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

After compute_last_transactions
V = T17
RV = T17
FT(1, read, @05.Philo.t_LTable;) = T17
FT(1, undefined, ) = T17
FT(1, read, @05.Philo.id_I) = T17
LT(1, read, @05.Philo.id_I) = T17
LT(1, undefined, ) = T17
LT(1, read, @05.Philo.t_LTable;) = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Before compute_summaries
V = T17
RV = T17
FT(1, read, @05.Philo.t_LTable;) = T17
FT(1, undefined, ) = T17
FT(1, read, @05.Philo.id_I) = T17
LT(1, read, @05.Philo.id_I) = T17
LT(1, undefined, ) = T17
LT(1, read, @05.Philo.t_LTable;) = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)

Engine: compute_neighbor_summary(Ti = T17, A = 22, B = 134)
Engine: compute_trickle_down_summary(Ti = T17, B = 134, C = 63)
After compute_summaries
V = T17
RV = T17
FT(1, read, @05.Philo.t_LTable;) = T17
FT(1, undefined, ) = T17
FT(1, read, @05.Philo.id_I) = T17
LT(1, read, @05.Philo.id_I) = T17
LT(1, undefined, ) = T17
LT(1, read, @05.Philo.t_LTable;) = T17
E =
C(T17) = (1, read, @05.Philo.id_I, open) (1, read, @05.Philo.t_LTable;, open)
S(T17) =

Engine: compute_aux_graph (1 -> 63 22)
Before merge_routine
V =
RV =
E =

After merge_routine
V =
RV =
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Before compute_vertices
V =
RV =
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

After compute_vertices
V = T19
RV =
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Before compute_reversed_vertices
V = T19
RV =
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

After compute_reversed_vertices
V = T19
RV = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Before compute_first_transactions
V = T19
RV = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

After compute_first_transactions
V = T19
RV = T19
FT(1, read, @05.Philo.id_I) = T19
FT(1, undefined, ) = T19
FT(1, read, @05.Philo.t_LTable;) = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Before compute_last_transactions
V = T19
RV = T19
FT(1, read, @05.Philo.id_I) = T19
FT(1, undefined, ) = T19
FT(1, read, @05.Philo.t_LTable;) = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

After compute_last_transactions
V = T19
RV = T19
FT(1, read, @05.Philo.id_I) = T19
FT(1, undefined, ) = T19
FT(1, read, @05.Philo.t_LTable;) = T19
LT(1, read, @05.Philo.t_LTable;) = T19
LT(1, undefined, ) = T19
LT(1, read, @05.Philo.id_I) = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Before compute_summaries
V = T19
RV = T19
FT(1, read, @05.Philo.id_I) = T19
FT(1, undefined, ) = T19
FT(1, read, @05.Philo.t_LTable;) = T19
LT(1, read, @05.Philo.t_LTable;) = T19
LT(1, undefined, ) = T19
LT(1, read, @05.Philo.id_I) = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)

Engine: compute_neighbor_summary(Ti = T19, A = 1, B = 63)
Engine: compute_trickle_down_summary(Ti = T19, B = 63, C = 22)
After compute_summaries
V = T19
RV = T19
FT(1, read, @05.Philo.id_I) = T19
FT(1, undefined, ) = T19
FT(1, read, @05.Philo.t_LTable;) = T19
LT(1, read, @05.Philo.t_LTable;) = T19
LT(1, undefined, ) = T19
LT(1, read, @05.Philo.id_I) = T19
E =
C(T19) = (1, read, @05.Philo.t_LTable;, open) (1, read, @05.Philo.id_I, open)
S(T19) =

Engine: compute_aux_graph (65 -> [16])
V = T20
RV = T20
FT(0, fork, 2) = T20
FT(0, undefined, ) = T20
LT(0, fork, 2) = T20
LT(0, undefined, ) = T20
E =
C(T20) = (0, fork, 2, open)

Engine: compute_aux_graph (66 -> [17])
V = T21
RV =
FT(2, begin, ) = T21
FT(2, undefined, ) = T21
LT(2, begin, ) = T21
LT(2, undefined, ) = T21
E =
C(T21) = (2, begin, , down)

No conflict serializability violation detected
